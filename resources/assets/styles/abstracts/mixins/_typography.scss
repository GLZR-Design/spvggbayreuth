@mixin font-style(
  $size: inherit,
  $weight: "regular",
  $uppercase: false,
  $color: "text"
) {
  color: var(--color-#{$color});
  @if ($size) {
    font-size: var(--font-size-#{$size});
  } @else {
    font-size: inherit;
  }
  @if ($weight) {
    font-weight: var(--font-weight-#{$weight});
  }
  text-transform: none;
  letter-spacing: 0.005em;
  @if ($uppercase) {
    text-transform: uppercase;
    @if $weight == 'regular' {
      letter-spacing: 0.01em;
    }
    @if $weight == 'bold' {
      letter-spacing: 0.02em;
    }
    @if $weight == 'extrabold' {
      letter-spacing: 0.04em;
    }
  }
}

@mixin text-style(
  $size: "regular",
  $line: 1.18,
  $weight: "regular",
  $color: "text"
) {
  font-size: var(--font-size-#{$size});
  @if $line {
    line-height: #{$line};
  }
  @if $weight {
    font-weight: var(--font-weight-#{$weight});
  }
  @if $color {
    font-weight: var(--font-text-#{$color});
  }
}

@mixin textbox($color, $neg: false) {
  @if $neg {
    color: var(--color-white);
  } @else {
    color: var(--color-black);
  }
  &:after {
    background-color: var(--color-#{$color});
  }
}

@mixin textbox-polygon {



}

@mixin textbox-polygon($color, $alignLeft: true, $child: false) {
  z-index: 1;
  display: inline-block;
  white-space: pre-wrap;
  position: relative;
  // padding: 0;
  &::after {
    content: "";
    display: block;
    z-index: -1;
    bottom: calc(#{$textbox-polygon-height} * (-0.025));
    @if ($alignLeft) {
      left: calc(#{$textbox-polygon-padding-x} * (-0.5));
    }
    @else {
      right: calc(#{$textbox-polygon-padding-x} * (-0.5));
    }
    position: absolute;
    width: calc(100% + #{$textbox-polygon-padding-x});
    height: $textbox-polygon-height;
    transform: skewX(var(--skewX-degree));
    transform-origin: center;
    transition: all 0.5s ease-in-out;
  }
  @if $color == "black" or $color == "dark-grey" {
    color: var(--color-white);
  } @else {
    color: var(--color-black);
  }
  &::after {
    background-color: var(--color-#{$color});
  }
}

@mixin hoverline($color) {
  &:after {
    display: block;
    position: absolute;
    bottom: 0;
    content: '';
    width: 100%;
    height: 4px;
    background-color: var(--color-#{$color});
    transform: scaleX(0);
    transition: all 0.5s ease-in-out;
    transform-origin: left;
  }

  &:hover {
    &:after {
      transform: scaleX(1);
    }
  }
}
