.is-textbox-polygon {
  @extend %textbox-polygon;
}

@each $color, $value in $theme-colors {
  .is-hoverbox-#{$color} {
      z-index: 1;
      display: inline-block;
      white-space: pre-wrap;
      position: relative;
      transition: color 0.2s ease-in-out 0.125s;
      line-height: 1;
      // backface-visibility: hidden;
      &::after {
        content: "";
        display: block;
        z-index: -1;
        bottom: -0.15ch;
        left: -0.75ch;
        position: absolute;
        width: calc(100% + 1.5ch);
        height: $textbox-polygon-height;
        transform: skewX(var(--skewX-degree)) scaleX(0);
        transform-origin: left;
        transition: transform 0.5s ease-in-out;
        background-color: var(--color-#{$color});
      }
      &:hover {

        @if($color == "black") {
          color: var(--color-white);
        }

        &::after {
          transform: skewX(var(--skewX-degree)) scale(1);
        }
      }
  }
}



.is-extrabold {
  @extend %font-weight-extrabold;
}
.is-bold {
  @extend %font-weight-bold;
}

.is-uppercase {
  @extend %text-uppercase;
}

.skew {
  transform: skewY(-2deg) !important;
}

.no-skew {
  @extend %transform-noSkew;
}


@each $color, $value in $theme-colors {
  .has-#{$color}-underline {
    position: relative;
    display: inline-block;
    &:after {
      display: block;
      content: '';
      height: 0.1em;
      width: 100%;
      background-color: var(--color-primary);
    }
  }

  .has-#{$color}-hoverline {
    position: relative;
    display: inline-block;
    &:after {
    @include transition(all);
      display: block;
      content: '';
      height: 0.1em;
      width: 100%;
      transform: scaleX(0);
      background-color: var(--color-primary);
    }
    &:hover {
    &:after {
      transform: scaleX(1);
    }
    }

  }

}



.d-flex {
  display: flex;
}

.d-inline {
  display: inline;
}

.has-box-shadow {
@include box-shadow;
}


.has-text-shadow {
  text-shadow: 0 0 2em rgba(0,0,0,0.5);
}

.has-border-radius {
  border-radius: $border-radius;
  overflow: hidden;
}

.text-center {
  text-align: center !important;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

@each $spacer, $mult in $theme-spacer {
  .ml-#{$spacer} {
      margin-left: var(--spacer-#{$spacer});
  }
  .mr-#{$spacer} {
      margin-right: var(--spacer-#{$spacer});
    }
  .mt-#{$spacer} {
      margin-top: var(--spacer-#{$spacer});
    }
  .mb-#{$spacer} {
      margin-bottom: var(--spacer-#{$spacer});
    }
  .mx-#{$spacer} {
    margin-left: var(--spacer-#{$spacer});
    margin-right: var(--spacer-#{$spacer});
  }
  .my-#{$spacer} {
    margin-top: var(--spacer-#{$spacer});
    margin-bottom: var(--spacer-#{$spacer});
  }
}
@each $spacer, $mult in $theme-spacer {
  .pl-#{$spacer} {
      padding-left: var(--spacer-#{$spacer});
  }
  .pr-#{$spacer} {
      padding-right: var(--spacer-#{$spacer});
    }
  .pt-#{$spacer} {
      padding-top: var(--spacer-#{$spacer});
    }
  .pb-#{$spacer} {
      padding-bottom: var(--spacer-#{$spacer});
    }
  .px-#{$spacer} {
    padding-left: var(--spacer-#{$spacer});
    padding-right: var(--spacer-#{$spacer});
  }
  .py-#{$spacer} {
    padding-top: var(--spacer-#{$spacer});
    padding-bottom: var(--spacer-#{$spacer});
  }
}

.no{
  &-mb {
    margin-bottom: 0 !important;
  }
  &-mt {
    margin-top: 0 !important;
  }
  &-ml {
    margin-left: 0 !important;
  }
  &-mr {
    margin-right: 0 !important;
  }
  &-mx {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  &-my {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  &-pb {
    padding-bottom: 0 !important;
  }
  &-pt {
    padding-top: 0 !important;
  }
  &-pl {
    padding-left: 0 !important;
  }
  &-pr {
    padding-right: 0 !important;
  }
  &-px {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
  &-py {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
}

.clearfix {
  @include clearfix();
}

.transform-skew-y {
  @include transform-skewY;
  img {
    @include transform-noSkewY;
  }
}